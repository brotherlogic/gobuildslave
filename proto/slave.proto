syntax = "proto3";

package gobuildslave;

message Empty {}

enum RequirementCategory {
  UNKNOWN = 0;
  DISK = 1;
  EXTERNAL = 2;
  SERVER = 3;
}

enum State {
  ACKNOWLEDGED = 0;
  BUILDING = 1;
  BUILT = 2;
  RUNNING = 3;
  UPDATE_STARTING = 4;
  UPDATING = 5;
  KILLING = 6;
  DEAD = 7;
  PENDING = 8;
  DIED = 9;
  BRINK_OF_DEATH = 10;
}


message Requirement {
  RequirementCategory category = 1;
  string properties = 2;
}

message Job {
  string name = 1;
  string go_path = 2;
  repeated Requirement requirements = 3;
  bool sudo = 4;
  bool bootstrap = 5;
}

message JobAssignment {
  Job job = 1;
  string server = 2;
  string host = 5;
  int32 port = 3;
  State state = 4;
  int64 startTime = 6;
  string command_key = 7;
  int32 build_fail = 8;
  string running_version = 9;
  int32 discover_count = 10;
  string status = 11;
}

message SlaveConfig {
  repeated Requirement requirements = 1;
}

message JobSpec {
	string name = 1;
	string server = 2;
	int64 disk = 3;
	repeated string args = 4;
	bool external = 5;
	string host = 6;
	int32 port = 7;
	bool cds = 8;
}

message JobDetails {
	JobSpec spec = 1;

	State state = 2;
	int64 start_time = 3;
	int32 test_count = 4;
}

message JobList {
	repeated JobDetails details = 1;
}

message Config {
	int64 memory = 1;
	int64 disk = 2;
	bool external = 3;
	string go_version = 4;
	bool supports_cds = 5;
}

message RunRequest {
  Job job = 1;
}

message RunResponse {}

message UpdateRequest{
  Job job = 1;
}

message UpdateResponse {}

message KillRequest {
  Job job = 1;
}

message KillResponse {}

message ListRequest {}

message ListResponse {
  repeated JobAssignment jobs = 1;
}

message ConfigRequest {}

message ConfigResponse {
  SlaveConfig config = 1;
}

service BuildSlave {
  rpc RunJob(RunRequest) returns (RunResponse) {};
  rpc UpdateJob(UpdateRequest) returns (UpdateResponse) {};
  rpc KillJob(KillRequest) returns (KillResponse) {};
  rpc ListJobs(ListRequest) returns (ListResponse) {};
  rpc SlaveConfig(ConfigRequest) returns (ConfigResponse) {};
}

service GoBuildSlave {
  rpc Update(JobSpec) returns (Empty) {};
  rpc BuildJob(JobSpec) returns (Empty) {};
  rpc Run(JobSpec) returns (Empty) {};
  rpc Kill(JobSpec) returns (Empty) {};
  rpc List(Empty) returns (JobList) {};
  rpc GetConfig(Empty) returns (Config) {};
}
