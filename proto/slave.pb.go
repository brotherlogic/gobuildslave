// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        (unknown)
// source: slave.proto

package gobuildslave

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RequirementCategory int32

const (
	RequirementCategory_UNKNOWN      RequirementCategory = 0
	RequirementCategory_DISK         RequirementCategory = 1
	RequirementCategory_EXTERNAL     RequirementCategory = 2
	RequirementCategory_SERVER       RequirementCategory = 3
	RequirementCategory_NETWORK      RequirementCategory = 4
	RequirementCategory_ACCESS_POINT RequirementCategory = 5
)

// Enum value maps for RequirementCategory.
var (
	RequirementCategory_name = map[int32]string{
		0: "UNKNOWN",
		1: "DISK",
		2: "EXTERNAL",
		3: "SERVER",
		4: "NETWORK",
		5: "ACCESS_POINT",
	}
	RequirementCategory_value = map[string]int32{
		"UNKNOWN":      0,
		"DISK":         1,
		"EXTERNAL":     2,
		"SERVER":       3,
		"NETWORK":      4,
		"ACCESS_POINT": 5,
	}
)

func (x RequirementCategory) Enum() *RequirementCategory {
	p := new(RequirementCategory)
	*p = x
	return p
}

func (x RequirementCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequirementCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_slave_proto_enumTypes[0].Descriptor()
}

func (RequirementCategory) Type() protoreflect.EnumType {
	return &file_slave_proto_enumTypes[0]
}

func (x RequirementCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequirementCategory.Descriptor instead.
func (RequirementCategory) EnumDescriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{0}
}

type State int32

const (
	State_ACKNOWLEDGED    State = 0
	State_BUILDING        State = 1
	State_BUILT           State = 2
	State_RUNNING         State = 3
	State_UPDATE_STARTING State = 4
	State_UPDATING        State = 5
	State_KILLING         State = 6
	State_DEAD            State = 7
	State_PENDING         State = 8
	State_DIED            State = 9
	State_BRINK_OF_DEATH  State = 10
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0:  "ACKNOWLEDGED",
		1:  "BUILDING",
		2:  "BUILT",
		3:  "RUNNING",
		4:  "UPDATE_STARTING",
		5:  "UPDATING",
		6:  "KILLING",
		7:  "DEAD",
		8:  "PENDING",
		9:  "DIED",
		10: "BRINK_OF_DEATH",
	}
	State_value = map[string]int32{
		"ACKNOWLEDGED":    0,
		"BUILDING":        1,
		"BUILT":           2,
		"RUNNING":         3,
		"UPDATE_STARTING": 4,
		"UPDATING":        5,
		"KILLING":         6,
		"DEAD":            7,
		"PENDING":         8,
		"DIED":            9,
		"BRINK_OF_DEATH":  10,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_slave_proto_enumTypes[1].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_slave_proto_enumTypes[1]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{1}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{0}
}

type Requirement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category   RequirementCategory `protobuf:"varint,1,opt,name=category,proto3,enum=gobuildslave.RequirementCategory" json:"category,omitempty"`
	Properties string              `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *Requirement) Reset() {
	*x = Requirement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Requirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Requirement) ProtoMessage() {}

func (x *Requirement) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Requirement.ProtoReflect.Descriptor instead.
func (*Requirement) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{1}
}

func (x *Requirement) GetCategory() RequirementCategory {
	if x != nil {
		return x.Category
	}
	return RequirementCategory_UNKNOWN
}

func (x *Requirement) GetProperties() string {
	if x != nil {
		return x.Properties
	}
	return ""
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	GoPath       string         `protobuf:"bytes,2,opt,name=go_path,json=goPath,proto3" json:"go_path,omitempty"`
	Requirements []*Requirement `protobuf:"bytes,3,rep,name=requirements,proto3" json:"requirements,omitempty"`
	Sudo         bool           `protobuf:"varint,4,opt,name=sudo,proto3" json:"sudo,omitempty"`
	Bootstrap    bool           `protobuf:"varint,5,opt,name=bootstrap,proto3" json:"bootstrap,omitempty"`
	Breakout     bool           `protobuf:"varint,6,opt,name=breakout,proto3" json:"breakout,omitempty"`
	// We partial bootstrap if we need something to come up
	// when it doesn't currently exist.
	PartialBootstrap bool `protobuf:"varint,7,opt,name=partial_bootstrap,json=partialBootstrap,proto3" json:"partial_bootstrap,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{2}
}

func (x *Job) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Job) GetGoPath() string {
	if x != nil {
		return x.GoPath
	}
	return ""
}

func (x *Job) GetRequirements() []*Requirement {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *Job) GetSudo() bool {
	if x != nil {
		return x.Sudo
	}
	return false
}

func (x *Job) GetBootstrap() bool {
	if x != nil {
		return x.Bootstrap
	}
	return false
}

func (x *Job) GetBreakout() bool {
	if x != nil {
		return x.Breakout
	}
	return false
}

func (x *Job) GetPartialBootstrap() bool {
	if x != nil {
		return x.PartialBootstrap
	}
	return false
}

type JobAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job                *Job   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Server             string `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	Host               string `protobuf:"bytes,5,opt,name=host,proto3" json:"host,omitempty"`
	Port               int32  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	State              State  `protobuf:"varint,4,opt,name=state,proto3,enum=gobuildslave.State" json:"state,omitempty"`
	StartTime          int64  `protobuf:"varint,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	CommandKey         string `protobuf:"bytes,7,opt,name=command_key,json=commandKey,proto3" json:"command_key,omitempty"`
	BuildFail          int32  `protobuf:"varint,8,opt,name=build_fail,json=buildFail,proto3" json:"build_fail,omitempty"`
	RunningVersion     string `protobuf:"bytes,9,opt,name=running_version,json=runningVersion,proto3" json:"running_version,omitempty"`
	DiscoverCount      int32  `protobuf:"varint,10,opt,name=discover_count,json=discoverCount,proto3" json:"discover_count,omitempty"`
	Status             string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	LastTransitionTime int64  `protobuf:"varint,12,opt,name=last_transition_time,json=lastTransitionTime,proto3" json:"last_transition_time,omitempty"`
	QueuePos           int32  `protobuf:"varint,13,opt,name=queue_pos,json=queuePos,proto3" json:"queue_pos,omitempty"`
	LastVersionPull    int64  `protobuf:"varint,14,opt,name=last_version_pull,json=lastVersionPull,proto3" json:"last_version_pull,omitempty"`
	LastUpdateTime     int64  `protobuf:"varint,15,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	SubState           string `protobuf:"bytes,16,opt,name=sub_state,json=subState,proto3" json:"sub_state,omitempty"`
}

func (x *JobAssignment) Reset() {
	*x = JobAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobAssignment) ProtoMessage() {}

func (x *JobAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobAssignment.ProtoReflect.Descriptor instead.
func (*JobAssignment) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{3}
}

func (x *JobAssignment) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobAssignment) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *JobAssignment) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *JobAssignment) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *JobAssignment) GetState() State {
	if x != nil {
		return x.State
	}
	return State_ACKNOWLEDGED
}

func (x *JobAssignment) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *JobAssignment) GetCommandKey() string {
	if x != nil {
		return x.CommandKey
	}
	return ""
}

func (x *JobAssignment) GetBuildFail() int32 {
	if x != nil {
		return x.BuildFail
	}
	return 0
}

func (x *JobAssignment) GetRunningVersion() string {
	if x != nil {
		return x.RunningVersion
	}
	return ""
}

func (x *JobAssignment) GetDiscoverCount() int32 {
	if x != nil {
		return x.DiscoverCount
	}
	return 0
}

func (x *JobAssignment) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JobAssignment) GetLastTransitionTime() int64 {
	if x != nil {
		return x.LastTransitionTime
	}
	return 0
}

func (x *JobAssignment) GetQueuePos() int32 {
	if x != nil {
		return x.QueuePos
	}
	return 0
}

func (x *JobAssignment) GetLastVersionPull() int64 {
	if x != nil {
		return x.LastVersionPull
	}
	return 0
}

func (x *JobAssignment) GetLastUpdateTime() int64 {
	if x != nil {
		return x.LastUpdateTime
	}
	return 0
}

func (x *JobAssignment) GetSubState() string {
	if x != nil {
		return x.SubState
	}
	return ""
}

type SlaveConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requirements []*Requirement `protobuf:"bytes,1,rep,name=requirements,proto3" json:"requirements,omitempty"`
}

func (x *SlaveConfig) Reset() {
	*x = SlaveConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlaveConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlaveConfig) ProtoMessage() {}

func (x *SlaveConfig) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlaveConfig.ProtoReflect.Descriptor instead.
func (*SlaveConfig) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{4}
}

func (x *SlaveConfig) GetRequirements() []*Requirement {
	if x != nil {
		return x.Requirements
	}
	return nil
}

type JobSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Server   string   `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	Disk     int64    `protobuf:"varint,3,opt,name=disk,proto3" json:"disk,omitempty"`
	Args     []string `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	External bool     `protobuf:"varint,5,opt,name=external,proto3" json:"external,omitempty"`
	Host     string   `protobuf:"bytes,6,opt,name=host,proto3" json:"host,omitempty"`
	Port     int32    `protobuf:"varint,7,opt,name=port,proto3" json:"port,omitempty"`
	Cds      bool     `protobuf:"varint,8,opt,name=cds,proto3" json:"cds,omitempty"`
}

func (x *JobSpec) Reset() {
	*x = JobSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSpec) ProtoMessage() {}

func (x *JobSpec) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSpec.ProtoReflect.Descriptor instead.
func (*JobSpec) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{5}
}

func (x *JobSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobSpec) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *JobSpec) GetDisk() int64 {
	if x != nil {
		return x.Disk
	}
	return 0
}

func (x *JobSpec) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *JobSpec) GetExternal() bool {
	if x != nil {
		return x.External
	}
	return false
}

func (x *JobSpec) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *JobSpec) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *JobSpec) GetCds() bool {
	if x != nil {
		return x.Cds
	}
	return false
}

type JobDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec      *JobSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	State     State    `protobuf:"varint,2,opt,name=state,proto3,enum=gobuildslave.State" json:"state,omitempty"`
	StartTime int64    `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	TestCount int32    `protobuf:"varint,4,opt,name=test_count,json=testCount,proto3" json:"test_count,omitempty"`
}

func (x *JobDetails) Reset() {
	*x = JobDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDetails) ProtoMessage() {}

func (x *JobDetails) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDetails.ProtoReflect.Descriptor instead.
func (*JobDetails) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{6}
}

func (x *JobDetails) GetSpec() *JobSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *JobDetails) GetState() State {
	if x != nil {
		return x.State
	}
	return State_ACKNOWLEDGED
}

func (x *JobDetails) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *JobDetails) GetTestCount() int32 {
	if x != nil {
		return x.TestCount
	}
	return 0
}

type JobList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*JobDetails `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *JobList) Reset() {
	*x = JobList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobList) ProtoMessage() {}

func (x *JobList) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobList.ProtoReflect.Descriptor instead.
func (*JobList) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{7}
}

func (x *JobList) GetDetails() []*JobDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memory      int64  `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	Disk        int64  `protobuf:"varint,2,opt,name=disk,proto3" json:"disk,omitempty"`
	External    bool   `protobuf:"varint,3,opt,name=external,proto3" json:"external,omitempty"`
	GoVersion   string `protobuf:"bytes,4,opt,name=go_version,json=goVersion,proto3" json:"go_version,omitempty"`
	SupportsCds bool   `protobuf:"varint,5,opt,name=supports_cds,json=supportsCds,proto3" json:"supports_cds,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{8}
}

func (x *Config) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Config) GetDisk() int64 {
	if x != nil {
		return x.Disk
	}
	return 0
}

func (x *Config) GetExternal() bool {
	if x != nil {
		return x.External
	}
	return false
}

func (x *Config) GetGoVersion() string {
	if x != nil {
		return x.GoVersion
	}
	return ""
}

func (x *Config) GetSupportsCds() bool {
	if x != nil {
		return x.SupportsCds
	}
	return false
}

type RunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *RunRequest) Reset() {
	*x = RunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunRequest) ProtoMessage() {}

func (x *RunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunRequest.ProtoReflect.Descriptor instead.
func (*RunRequest) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{9}
}

func (x *RunRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type RunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunResponse) Reset() {
	*x = RunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunResponse) ProtoMessage() {}

func (x *RunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunResponse.ProtoReflect.Descriptor instead.
func (*RunResponse) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{10}
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{12}
}

type KillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *KillRequest) Reset() {
	*x = KillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillRequest) ProtoMessage() {}

func (x *KillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillRequest.ProtoReflect.Descriptor instead.
func (*KillRequest) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{13}
}

func (x *KillRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type KillResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KillResponse) Reset() {
	*x = KillResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillResponse) ProtoMessage() {}

func (x *KillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillResponse.ProtoReflect.Descriptor instead.
func (*KillResponse) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{14}
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{15}
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*JobAssignment `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{16}
}

func (x *ListResponse) GetJobs() []*JobAssignment {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type ConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigRequest) Reset() {
	*x = ConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest) ProtoMessage() {}

func (x *ConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest.ProtoReflect.Descriptor instead.
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{17}
}

type ConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *SlaveConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ConfigResponse) Reset() {
	*x = ConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slave_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResponse) ProtoMessage() {}

func (x *ConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slave_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResponse.ProtoReflect.Descriptor instead.
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return file_slave_proto_rawDescGZIP(), []int{18}
}

func (x *ConfigResponse) GetConfig() *SlaveConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_slave_proto protoreflect.FileDescriptor

var file_slave_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x67,
	0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x6c, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73,
	0x6c, 0x61, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x22, 0xec, 0x01, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x67, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x64, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x75, 0x64, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6f,
	0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62,
	0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x65, 0x61,
	0x6b, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x72, 0x65, 0x61,
	0x6b, 0x6f, 0x75, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x22, 0xa7, 0x04, 0x0a, 0x0d, 0x4a, 0x6f, 0x62, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e,
	0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4b,
	0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x46, 0x61, 0x69,
	0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x6f, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x75, 0x6c, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x4c, 0x0a, 0x0b, 0x53,
	0x6c, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x07, 0x4a, 0x6f,
	0x62, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x64, 0x69, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x63, 0x64, 0x73, 0x22,
	0xa0, 0x01, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x29,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67,
	0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x4a, 0x6f,
	0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x92, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f,
	0x63, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x43, 0x64, 0x73, 0x22, 0x31, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65,
	0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x03, 0x6a, 0x6f, 0x62,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x10,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x32, 0x0a, 0x0b, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67,
	0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x52,
	0x03, 0x6a, 0x6f, 0x62, 0x22, 0x0e, 0x0a, 0x0c, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65,
	0x2e, 0x4a, 0x6f, 0x62, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04,
	0x6a, 0x6f, 0x62, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x43, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2a, 0x65, 0x0a, 0x13, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x44, 0x49, 0x53, 0x4b, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x58, 0x54, 0x45,
	0x52, 0x4e, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52,
	0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x04, 0x12,
	0x10, 0x0a, 0x0c, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10,
	0x05, 0x2a, 0xa4, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x41,
	0x43, 0x4b, 0x4e, 0x4f, 0x57, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x42,
	0x55, 0x49, 0x4c, 0x54, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x49, 0x4c, 0x4c, 0x49, 0x4e,
	0x47, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x41, 0x44, 0x10, 0x07, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x49,
	0x45, 0x44, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x52, 0x49, 0x4e, 0x4b, 0x5f, 0x4f, 0x46,
	0x5f, 0x44, 0x45, 0x41, 0x54, 0x48, 0x10, 0x0a, 0x32, 0xec, 0x02, 0x0a, 0x0a, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x52, 0x75, 0x6e, 0x4a, 0x6f,
	0x62, 0x12, 0x18, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65,
	0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x6f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73,
	0x6c, 0x61, 0x76, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x07, 0x4b, 0x69, 0x6c, 0x6c, 0x4a, 0x6f, 0x62, 0x12, 0x19, 0x2e,
	0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x4b, 0x69, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f,
	0x62, 0x73, 0x12, 0x19, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x53,
	0x6c, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xdb, 0x02, 0x0a, 0x0c, 0x47, 0x6f, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x15, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76,
	0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x1a, 0x13, 0x2e, 0x67, 0x6f, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x38, 0x0a, 0x08, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4a, 0x6f, 0x62, 0x12, 0x15, 0x2e, 0x67,
	0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x53,
	0x70, 0x65, 0x63, 0x1a, 0x13, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61,
	0x76, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x03, 0x52, 0x75,
	0x6e, 0x12, 0x15, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65,
	0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x1a, 0x13, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x34, 0x0a, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x1a, 0x13,
	0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e,
	0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x15, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76,
	0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x13, 0x2e, 0x67, 0x6f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e,
	0x67, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_slave_proto_rawDescOnce sync.Once
	file_slave_proto_rawDescData = file_slave_proto_rawDesc
)

func file_slave_proto_rawDescGZIP() []byte {
	file_slave_proto_rawDescOnce.Do(func() {
		file_slave_proto_rawDescData = protoimpl.X.CompressGZIP(file_slave_proto_rawDescData)
	})
	return file_slave_proto_rawDescData
}

var file_slave_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_slave_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_slave_proto_goTypes = []interface{}{
	(RequirementCategory)(0), // 0: gobuildslave.RequirementCategory
	(State)(0),               // 1: gobuildslave.State
	(*Empty)(nil),            // 2: gobuildslave.Empty
	(*Requirement)(nil),      // 3: gobuildslave.Requirement
	(*Job)(nil),              // 4: gobuildslave.Job
	(*JobAssignment)(nil),    // 5: gobuildslave.JobAssignment
	(*SlaveConfig)(nil),      // 6: gobuildslave.SlaveConfig
	(*JobSpec)(nil),          // 7: gobuildslave.JobSpec
	(*JobDetails)(nil),       // 8: gobuildslave.JobDetails
	(*JobList)(nil),          // 9: gobuildslave.JobList
	(*Config)(nil),           // 10: gobuildslave.Config
	(*RunRequest)(nil),       // 11: gobuildslave.RunRequest
	(*RunResponse)(nil),      // 12: gobuildslave.RunResponse
	(*UpdateRequest)(nil),    // 13: gobuildslave.UpdateRequest
	(*UpdateResponse)(nil),   // 14: gobuildslave.UpdateResponse
	(*KillRequest)(nil),      // 15: gobuildslave.KillRequest
	(*KillResponse)(nil),     // 16: gobuildslave.KillResponse
	(*ListRequest)(nil),      // 17: gobuildslave.ListRequest
	(*ListResponse)(nil),     // 18: gobuildslave.ListResponse
	(*ConfigRequest)(nil),    // 19: gobuildslave.ConfigRequest
	(*ConfigResponse)(nil),   // 20: gobuildslave.ConfigResponse
}
var file_slave_proto_depIdxs = []int32{
	0,  // 0: gobuildslave.Requirement.category:type_name -> gobuildslave.RequirementCategory
	3,  // 1: gobuildslave.Job.requirements:type_name -> gobuildslave.Requirement
	4,  // 2: gobuildslave.JobAssignment.job:type_name -> gobuildslave.Job
	1,  // 3: gobuildslave.JobAssignment.state:type_name -> gobuildslave.State
	3,  // 4: gobuildslave.SlaveConfig.requirements:type_name -> gobuildslave.Requirement
	7,  // 5: gobuildslave.JobDetails.spec:type_name -> gobuildslave.JobSpec
	1,  // 6: gobuildslave.JobDetails.state:type_name -> gobuildslave.State
	8,  // 7: gobuildslave.JobList.details:type_name -> gobuildslave.JobDetails
	4,  // 8: gobuildslave.RunRequest.job:type_name -> gobuildslave.Job
	4,  // 9: gobuildslave.UpdateRequest.job:type_name -> gobuildslave.Job
	4,  // 10: gobuildslave.KillRequest.job:type_name -> gobuildslave.Job
	5,  // 11: gobuildslave.ListResponse.jobs:type_name -> gobuildslave.JobAssignment
	6,  // 12: gobuildslave.ConfigResponse.config:type_name -> gobuildslave.SlaveConfig
	11, // 13: gobuildslave.BuildSlave.RunJob:input_type -> gobuildslave.RunRequest
	13, // 14: gobuildslave.BuildSlave.UpdateJob:input_type -> gobuildslave.UpdateRequest
	15, // 15: gobuildslave.BuildSlave.KillJob:input_type -> gobuildslave.KillRequest
	17, // 16: gobuildslave.BuildSlave.ListJobs:input_type -> gobuildslave.ListRequest
	19, // 17: gobuildslave.BuildSlave.SlaveConfig:input_type -> gobuildslave.ConfigRequest
	7,  // 18: gobuildslave.GoBuildSlave.Update:input_type -> gobuildslave.JobSpec
	7,  // 19: gobuildslave.GoBuildSlave.BuildJob:input_type -> gobuildslave.JobSpec
	7,  // 20: gobuildslave.GoBuildSlave.Run:input_type -> gobuildslave.JobSpec
	7,  // 21: gobuildslave.GoBuildSlave.Kill:input_type -> gobuildslave.JobSpec
	2,  // 22: gobuildslave.GoBuildSlave.List:input_type -> gobuildslave.Empty
	2,  // 23: gobuildslave.GoBuildSlave.GetConfig:input_type -> gobuildslave.Empty
	12, // 24: gobuildslave.BuildSlave.RunJob:output_type -> gobuildslave.RunResponse
	14, // 25: gobuildslave.BuildSlave.UpdateJob:output_type -> gobuildslave.UpdateResponse
	16, // 26: gobuildslave.BuildSlave.KillJob:output_type -> gobuildslave.KillResponse
	18, // 27: gobuildslave.BuildSlave.ListJobs:output_type -> gobuildslave.ListResponse
	20, // 28: gobuildslave.BuildSlave.SlaveConfig:output_type -> gobuildslave.ConfigResponse
	2,  // 29: gobuildslave.GoBuildSlave.Update:output_type -> gobuildslave.Empty
	2,  // 30: gobuildslave.GoBuildSlave.BuildJob:output_type -> gobuildslave.Empty
	2,  // 31: gobuildslave.GoBuildSlave.Run:output_type -> gobuildslave.Empty
	2,  // 32: gobuildslave.GoBuildSlave.Kill:output_type -> gobuildslave.Empty
	9,  // 33: gobuildslave.GoBuildSlave.List:output_type -> gobuildslave.JobList
	10, // 34: gobuildslave.GoBuildSlave.GetConfig:output_type -> gobuildslave.Config
	24, // [24:35] is the sub-list for method output_type
	13, // [13:24] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_slave_proto_init() }
func file_slave_proto_init() {
	if File_slave_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_slave_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Requirement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlaveConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slave_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_slave_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_slave_proto_goTypes,
		DependencyIndexes: file_slave_proto_depIdxs,
		EnumInfos:         file_slave_proto_enumTypes,
		MessageInfos:      file_slave_proto_msgTypes,
	}.Build()
	File_slave_proto = out.File
	file_slave_proto_rawDesc = nil
	file_slave_proto_goTypes = nil
	file_slave_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BuildSlaveClient is the client API for BuildSlave service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BuildSlaveClient interface {
	RunJob(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error)
	UpdateJob(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	KillJob(ctx context.Context, in *KillRequest, opts ...grpc.CallOption) (*KillResponse, error)
	ListJobs(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	SlaveConfig(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error)
}

type buildSlaveClient struct {
	cc grpc.ClientConnInterface
}

func NewBuildSlaveClient(cc grpc.ClientConnInterface) BuildSlaveClient {
	return &buildSlaveClient{cc}
}

func (c *buildSlaveClient) RunJob(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error) {
	out := new(RunResponse)
	err := c.cc.Invoke(ctx, "/gobuildslave.BuildSlave/RunJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildSlaveClient) UpdateJob(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/gobuildslave.BuildSlave/UpdateJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildSlaveClient) KillJob(ctx context.Context, in *KillRequest, opts ...grpc.CallOption) (*KillResponse, error) {
	out := new(KillResponse)
	err := c.cc.Invoke(ctx, "/gobuildslave.BuildSlave/KillJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildSlaveClient) ListJobs(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/gobuildslave.BuildSlave/ListJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildSlaveClient) SlaveConfig(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error) {
	out := new(ConfigResponse)
	err := c.cc.Invoke(ctx, "/gobuildslave.BuildSlave/SlaveConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BuildSlaveServer is the server API for BuildSlave service.
type BuildSlaveServer interface {
	RunJob(context.Context, *RunRequest) (*RunResponse, error)
	UpdateJob(context.Context, *UpdateRequest) (*UpdateResponse, error)
	KillJob(context.Context, *KillRequest) (*KillResponse, error)
	ListJobs(context.Context, *ListRequest) (*ListResponse, error)
	SlaveConfig(context.Context, *ConfigRequest) (*ConfigResponse, error)
}

// UnimplementedBuildSlaveServer can be embedded to have forward compatible implementations.
type UnimplementedBuildSlaveServer struct {
}

func (*UnimplementedBuildSlaveServer) RunJob(context.Context, *RunRequest) (*RunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunJob not implemented")
}
func (*UnimplementedBuildSlaveServer) UpdateJob(context.Context, *UpdateRequest) (*UpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateJob not implemented")
}
func (*UnimplementedBuildSlaveServer) KillJob(context.Context, *KillRequest) (*KillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KillJob not implemented")
}
func (*UnimplementedBuildSlaveServer) ListJobs(context.Context, *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListJobs not implemented")
}
func (*UnimplementedBuildSlaveServer) SlaveConfig(context.Context, *ConfigRequest) (*ConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SlaveConfig not implemented")
}

func RegisterBuildSlaveServer(s *grpc.Server, srv BuildSlaveServer) {
	s.RegisterService(&_BuildSlave_serviceDesc, srv)
}

func _BuildSlave_RunJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildSlaveServer).RunJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gobuildslave.BuildSlave/RunJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildSlaveServer).RunJob(ctx, req.(*RunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildSlave_UpdateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildSlaveServer).UpdateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gobuildslave.BuildSlave/UpdateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildSlaveServer).UpdateJob(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildSlave_KillJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildSlaveServer).KillJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gobuildslave.BuildSlave/KillJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildSlaveServer).KillJob(ctx, req.(*KillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildSlave_ListJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildSlaveServer).ListJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gobuildslave.BuildSlave/ListJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildSlaveServer).ListJobs(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildSlave_SlaveConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildSlaveServer).SlaveConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gobuildslave.BuildSlave/SlaveConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildSlaveServer).SlaveConfig(ctx, req.(*ConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BuildSlave_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gobuildslave.BuildSlave",
	HandlerType: (*BuildSlaveServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RunJob",
			Handler:    _BuildSlave_RunJob_Handler,
		},
		{
			MethodName: "UpdateJob",
			Handler:    _BuildSlave_UpdateJob_Handler,
		},
		{
			MethodName: "KillJob",
			Handler:    _BuildSlave_KillJob_Handler,
		},
		{
			MethodName: "ListJobs",
			Handler:    _BuildSlave_ListJobs_Handler,
		},
		{
			MethodName: "SlaveConfig",
			Handler:    _BuildSlave_SlaveConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "slave.proto",
}

// GoBuildSlaveClient is the client API for GoBuildSlave service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoBuildSlaveClient interface {
	Update(ctx context.Context, in *JobSpec, opts ...grpc.CallOption) (*Empty, error)
	BuildJob(ctx context.Context, in *JobSpec, opts ...grpc.CallOption) (*Empty, error)
	Run(ctx context.Context, in *JobSpec, opts ...grpc.CallOption) (*Empty, error)
	Kill(ctx context.Context, in *JobSpec, opts ...grpc.CallOption) (*Empty, error)
	List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*JobList, error)
	GetConfig(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Config, error)
}

type goBuildSlaveClient struct {
	cc grpc.ClientConnInterface
}

func NewGoBuildSlaveClient(cc grpc.ClientConnInterface) GoBuildSlaveClient {
	return &goBuildSlaveClient{cc}
}

func (c *goBuildSlaveClient) Update(ctx context.Context, in *JobSpec, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/gobuildslave.GoBuildSlave/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goBuildSlaveClient) BuildJob(ctx context.Context, in *JobSpec, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/gobuildslave.GoBuildSlave/BuildJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goBuildSlaveClient) Run(ctx context.Context, in *JobSpec, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/gobuildslave.GoBuildSlave/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goBuildSlaveClient) Kill(ctx context.Context, in *JobSpec, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/gobuildslave.GoBuildSlave/Kill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goBuildSlaveClient) List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*JobList, error) {
	out := new(JobList)
	err := c.cc.Invoke(ctx, "/gobuildslave.GoBuildSlave/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goBuildSlaveClient) GetConfig(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/gobuildslave.GoBuildSlave/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoBuildSlaveServer is the server API for GoBuildSlave service.
type GoBuildSlaveServer interface {
	Update(context.Context, *JobSpec) (*Empty, error)
	BuildJob(context.Context, *JobSpec) (*Empty, error)
	Run(context.Context, *JobSpec) (*Empty, error)
	Kill(context.Context, *JobSpec) (*Empty, error)
	List(context.Context, *Empty) (*JobList, error)
	GetConfig(context.Context, *Empty) (*Config, error)
}

// UnimplementedGoBuildSlaveServer can be embedded to have forward compatible implementations.
type UnimplementedGoBuildSlaveServer struct {
}

func (*UnimplementedGoBuildSlaveServer) Update(context.Context, *JobSpec) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedGoBuildSlaveServer) BuildJob(context.Context, *JobSpec) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildJob not implemented")
}
func (*UnimplementedGoBuildSlaveServer) Run(context.Context, *JobSpec) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}
func (*UnimplementedGoBuildSlaveServer) Kill(context.Context, *JobSpec) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Kill not implemented")
}
func (*UnimplementedGoBuildSlaveServer) List(context.Context, *Empty) (*JobList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedGoBuildSlaveServer) GetConfig(context.Context, *Empty) (*Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}

func RegisterGoBuildSlaveServer(s *grpc.Server, srv GoBuildSlaveServer) {
	s.RegisterService(&_GoBuildSlave_serviceDesc, srv)
}

func _GoBuildSlave_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobSpec)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoBuildSlaveServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gobuildslave.GoBuildSlave/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoBuildSlaveServer).Update(ctx, req.(*JobSpec))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoBuildSlave_BuildJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobSpec)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoBuildSlaveServer).BuildJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gobuildslave.GoBuildSlave/BuildJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoBuildSlaveServer).BuildJob(ctx, req.(*JobSpec))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoBuildSlave_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobSpec)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoBuildSlaveServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gobuildslave.GoBuildSlave/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoBuildSlaveServer).Run(ctx, req.(*JobSpec))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoBuildSlave_Kill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobSpec)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoBuildSlaveServer).Kill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gobuildslave.GoBuildSlave/Kill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoBuildSlaveServer).Kill(ctx, req.(*JobSpec))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoBuildSlave_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoBuildSlaveServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gobuildslave.GoBuildSlave/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoBuildSlaveServer).List(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoBuildSlave_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoBuildSlaveServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gobuildslave.GoBuildSlave/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoBuildSlaveServer).GetConfig(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoBuildSlave_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gobuildslave.GoBuildSlave",
	HandlerType: (*GoBuildSlaveServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Update",
			Handler:    _GoBuildSlave_Update_Handler,
		},
		{
			MethodName: "BuildJob",
			Handler:    _GoBuildSlave_BuildJob_Handler,
		},
		{
			MethodName: "Run",
			Handler:    _GoBuildSlave_Run_Handler,
		},
		{
			MethodName: "Kill",
			Handler:    _GoBuildSlave_Kill_Handler,
		},
		{
			MethodName: "List",
			Handler:    _GoBuildSlave_List_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _GoBuildSlave_GetConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "slave.proto",
}
